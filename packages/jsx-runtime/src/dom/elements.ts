import * as Attr from "./attributes";
import { ElementDef, SVGElementDef } from "./types";

/// <reference path="dom.d.ts" />

export interface Elements {
  // HTML
  a: ElementDef<Attr.AnchorHTMLAttributes, HTMLAnchorElement>;
  abbr: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  address: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  area: ElementDef<Attr.AreaHTMLAttributes, HTMLAreaElement>;
  article: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  aside: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  audio: ElementDef<Attr.AudioHTMLAttributes, HTMLAudioElement>;
  b: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  base: ElementDef<Attr.BaseHTMLAttributes, HTMLBaseElement>;
  bdi: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  bdo: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  big: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  blockquote: ElementDef<Attr.BlockquoteHTMLAttributes, HTMLElement>;
  body: ElementDef<Attr.HTMLAttributes, HTMLBodyElement>;
  br: ElementDef<Attr.HTMLAttributes, HTMLBRElement>;
  button: ElementDef<Attr.ButtonHTMLAttributes, HTMLButtonElement>;
  canvas: ElementDef<Attr.CanvasHTMLAttributes, HTMLCanvasElement>;
  caption: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  cite: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  code: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  col: ElementDef<Attr.ColHTMLAttributes, HTMLTableColElement>;
  colgroup: ElementDef<Attr.ColgroupHTMLAttributes, HTMLTableColElement>;
  data: ElementDef<Attr.DataHTMLAttributes, HTMLDataElement>;
  datalist: ElementDef<Attr.HTMLAttributes, HTMLDataListElement>;
  dd: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  del: ElementDef<Attr.DelHTMLAttributes, HTMLElement>;
  details: ElementDef<Attr.DetailsHTMLAttributes, HTMLElement>;
  dfn: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  dialog: ElementDef<Attr.DialogHTMLAttributes, HTMLDialogElement>;
  div: ElementDef<Attr.HTMLAttributes, HTMLDivElement>;
  dl: ElementDef<Attr.HTMLAttributes, HTMLDListElement>;
  dt: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  em: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  embed: ElementDef<Attr.EmbedHTMLAttributes, HTMLEmbedElement>;
  fieldset: ElementDef<Attr.FieldsetHTMLAttributes, HTMLFieldSetElement>;
  figcaption: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  figure: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  footer: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  form: ElementDef<Attr.FormHTMLAttributes, HTMLFormElement>;
  h1: ElementDef<Attr.HTMLAttributes, HTMLHeadingElement>;
  h2: ElementDef<Attr.HTMLAttributes, HTMLHeadingElement>;
  h3: ElementDef<Attr.HTMLAttributes, HTMLHeadingElement>;
  h4: ElementDef<Attr.HTMLAttributes, HTMLHeadingElement>;
  h5: ElementDef<Attr.HTMLAttributes, HTMLHeadingElement>;
  h6: ElementDef<Attr.HTMLAttributes, HTMLHeadingElement>;
  head: ElementDef<Attr.HTMLAttributes, HTMLHeadElement>;
  header: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  hgroup: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  hr: ElementDef<Attr.HTMLAttributes, HTMLHRElement>;
  html: ElementDef<Attr.HtmlHTMLAttributes, HTMLHtmlElement>;
  i: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  iframe: ElementDef<Attr.IframeHTMLAttributes, HTMLIFrameElement>;
  img: ElementDef<Attr.ImgHTMLAttributes, HTMLImageElement>;
  input: ElementDef<Attr.InputHTMLAttributes, HTMLInputElement>;
  ins: ElementDef<Attr.InsHTMLAttributes, HTMLModElement>;
  kbd: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  keygen: ElementDef<Attr.KeygenHTMLAttributes, HTMLElement>;
  label: ElementDef<Attr.LabelHTMLAttributes, HTMLLabelElement>;
  legend: ElementDef<Attr.HTMLAttributes, HTMLLegendElement>;
  li: ElementDef<Attr.LiHTMLAttributes, HTMLLIElement>;
  link: ElementDef<Attr.LinkHTMLAttributes, HTMLLinkElement>;
  main: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  map: ElementDef<Attr.MapHTMLAttributes, HTMLMapElement>;
  mark: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  menu: ElementDef<Attr.MenuHTMLAttributes, HTMLElement>;
  menuitem: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  meta: ElementDef<Attr.MetaHTMLAttributes, HTMLMetaElement>;
  meter: ElementDef<Attr.MeterHTMLAttributes, HTMLElement>;
  nav: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  noindex: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  noscript: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  object: ElementDef<Attr.ObjectHTMLAttributes, HTMLObjectElement>;
  ol: ElementDef<Attr.OlHTMLAttributes, HTMLOListElement>;
  optgroup: ElementDef<Attr.OptgroupHTMLAttributes, HTMLOptGroupElement>;
  option: ElementDef<Attr.OptionHTMLAttributes, HTMLOptionElement>;
  output: ElementDef<Attr.OutputHTMLAttributes, HTMLElement>;
  p: ElementDef<Attr.HTMLAttributes, HTMLParagraphElement>;
  param: ElementDef<Attr.ParamHTMLAttributes, HTMLParamElement>;
  picture: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  pre: ElementDef<Attr.HTMLAttributes, HTMLPreElement>;
  progress: ElementDef<Attr.ProgressHTMLAttributes, HTMLProgressElement>;
  q: ElementDef<Attr.QuoteHTMLAttributes, HTMLQuoteElement>;
  rp: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  rt: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  ruby: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  s: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  samp: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  slot: ElementDef<Attr.SlotHTMLAttributes, HTMLSlotElement>;
  script: ElementDef<Attr.ScriptHTMLAttributes, HTMLScriptElement>;
  section: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  select: ElementDef<Attr.SelectHTMLAttributes, HTMLSelectElement>;
  small: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  source: ElementDef<Attr.SourceHTMLAttributes, HTMLSourceElement>;
  span: ElementDef<Attr.HTMLAttributes, HTMLSpanElement>;
  strong: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  style: ElementDef<Attr.StyleHTMLAttributes, HTMLStyleElement>;
  sub: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  summary: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  sup: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  table: ElementDef<Attr.TableHTMLAttributes, HTMLTableElement>;
  template: ElementDef<Attr.HTMLAttributes, HTMLTemplateElement>;
  tbody: ElementDef<Attr.HTMLAttributes, HTMLTableSectionElement>;
  td: ElementDef<Attr.TdHTMLAttributes, HTMLTableDataCellElement>;
  textarea: ElementDef<Attr.TextareaHTMLAttributes, HTMLTextAreaElement>;
  tfoot: ElementDef<Attr.HTMLAttributes, HTMLTableSectionElement>;
  th: ElementDef<Attr.ThHTMLAttributes, HTMLTableHeaderCellElement>;
  thead: ElementDef<Attr.HTMLAttributes, HTMLTableSectionElement>;
  time: ElementDef<Attr.TimeHTMLAttributes, HTMLElement>;
  title: ElementDef<Attr.HTMLAttributes, HTMLTitleElement>;
  tr: ElementDef<Attr.HTMLAttributes, HTMLTableRowElement>;
  track: ElementDef<Attr.TrackHTMLAttributes, HTMLTrackElement>;
  u: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  ul: ElementDef<Attr.HTMLAttributes, HTMLUListElement>;
  var: ElementDef<Attr.HTMLAttributes, HTMLElement>;
  video: ElementDef<Attr.VideoHTMLAttributes, HTMLVideoElement>;
  wbr: ElementDef<Attr.HTMLAttributes, HTMLElement>;

  // SVG
  svg: SVGElementDef<SVGSVGElement>;

  animate: SVGElementDef<SVGElement>; // TODO: It is SVGAnimateElement but is not in TypeScript's lib.dom.d.ts for now.
  animateMotion: SVGElementDef<SVGElement>;
  animateTransform: SVGElementDef<SVGElement>; // TODO: It is SVGAnimateTransformElement but is not in TypeScript's lib.dom.d.ts for now.
  circle: SVGElementDef<SVGCircleElement>;
  clipPath: SVGElementDef<SVGClipPathElement>;
  defs: SVGElementDef<SVGDefsElement>;
  desc: SVGElementDef<SVGDescElement>;
  ellipse: SVGElementDef<SVGEllipseElement>;
  feBlend: SVGElementDef<SVGFEBlendElement>;
  feColorMatrix: SVGElementDef<SVGFEColorMatrixElement>;
  feComponentTransfer: SVGElementDef<SVGFEComponentTransferElement>;
  feComposite: SVGElementDef<SVGFECompositeElement>;
  feConvolveMatrix: SVGElementDef<SVGFEConvolveMatrixElement>;
  feDiffuseLighting: SVGElementDef<SVGFEDiffuseLightingElement>;
  feDisplacementMap: SVGElementDef<SVGFEDisplacementMapElement>;
  feDistantLight: SVGElementDef<SVGFEDistantLightElement>;
  feDropShadow: SVGElementDef<SVGFEDropShadowElement>;
  feFlood: SVGElementDef<SVGFEFloodElement>;
  feFuncA: SVGElementDef<SVGFEFuncAElement>;
  feFuncB: SVGElementDef<SVGFEFuncBElement>;
  feFuncG: SVGElementDef<SVGFEFuncGElement>;
  feFuncR: SVGElementDef<SVGFEFuncRElement>;
  feGaussianBlur: SVGElementDef<SVGFEGaussianBlurElement>;
  feImage: SVGElementDef<SVGFEImageElement>;
  feMerge: SVGElementDef<SVGFEMergeElement>;
  feMergeNode: SVGElementDef<SVGFEMergeNodeElement>;
  feMorphology: SVGElementDef<SVGFEMorphologyElement>;
  feOffset: SVGElementDef<SVGFEOffsetElement>;
  fePointLight: SVGElementDef<SVGFEPointLightElement>;
  feSpecularLighting: SVGElementDef<SVGFESpecularLightingElement>;
  feSpotLight: SVGElementDef<SVGFESpotLightElement>;
  feTile: SVGElementDef<SVGFETileElement>;
  feTurbulence: SVGElementDef<SVGFETurbulenceElement>;
  filter: SVGElementDef<SVGFilterElement>;
  foreignObject: SVGElementDef<SVGForeignObjectElement>;
  g: SVGElementDef<SVGGElement>;
  image: SVGElementDef<SVGImageElement>;
  line: SVGElementDef<SVGLineElement>;
  linearGradient: SVGElementDef<SVGLinearGradientElement>;
  marker: SVGElementDef<SVGMarkerElement>;
  mask: SVGElementDef<SVGMaskElement>;
  metadata: SVGElementDef<SVGMetadataElement>;
  mpath: SVGElementDef<SVGElement>;
  path: SVGElementDef<SVGPathElement>;
  pattern: SVGElementDef<SVGPatternElement>;
  polygon: SVGElementDef<SVGPolygonElement>;
  polyline: SVGElementDef<SVGPolylineElement>;
  radialGradient: SVGElementDef<SVGRadialGradientElement>;
  rect: SVGElementDef<SVGRectElement>;
  stop: SVGElementDef<SVGStopElement>;
  switch: SVGElementDef<SVGSwitchElement>;
  symbol: SVGElementDef<SVGSymbolElement>;
  text: SVGElementDef<SVGTextElement>;
  textPath: SVGElementDef<SVGTextPathElement>;
  tspan: SVGElementDef<SVGTSpanElement>;
  use: SVGElementDef<SVGUseElement>;
  view: SVGElementDef<SVGViewElement>;
}
